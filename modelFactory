from sklearn.neural_network import MLPClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from sklearn.gaussian_process import GaussianProcessClassifier
from sklearn.gaussian_process.kernels import RBF
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier
from sklearn.naive_bayes import GaussianNB
from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis
from sklearn.linear_model import LogisticRegression
#import tensorflow as tf

 
MODEL_NAMES = [
    'DecisionTreeClassifier', 'MLPClassifier', 'KNeighborsClassifier',
    'GaussianNB', 'QuadraticDiscriminantAnalysis', 'LogisticRegression'
                ]
 
def get_model(name):
    if not name:
        return None
    elif name == 'DecisionTreeClassifier':
        return DecisionTreeClassifier()
    elif name == 'MLPClassifier':
        return MLPClassifier()
    elif name == 'KNeighborsClassifier':
        return KNeighborsClassifier()
    elif name == 'GaussianNB':
        return GaussianNB()
    elif name == 'QuadraticDiscriminantAnalysis':
        return QuadraticDiscriminantAnalysis()
    elif name == 'LogisticRegression':
        return LogisticRegression()  

   
